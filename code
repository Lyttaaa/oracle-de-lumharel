import discord
from discord.ext import commands
import json
from datetime import date

intents = discord.Intents.default()
intents.members = True
intents.reactions = True
bot = commands.Bot(command_prefix="!", intents=intents)

# --- CONFIGURATION ---

# IDs des messages des autels
AUTEL_MESSAGES = {
    "Orrak": 1353249202523865153,   # ID du message d’autel Orrak
    "Vaek": 1353255384948801637,    # ID du message d’autel Vaek
    "Nhyara": 1353255533544734751,  # ID du message d’autel Nhyara
    "Zeroth": 1353255680462819450,  # ID du message d’autel Zeroth
    "Aëldis": 1353257057679052910   # ID du message d’autel Aëldis
}

# Prières (emoji → rôle donné)
PRIERES = {
    "🌿": "Béni·e par la Terre",   # Orrak
    "🔥": "Marqué·e par la Flamme",  # Vaek
    "🌪️": "Guidé·e par les Vents",  # Nhyara
    "🌑": "Voilé·e par les Ombres",  # Zeroth
    "❄️": "Porté·e par le Silence"   # Aëldis
}

# Offrandes (dieu → liste d’emojis acceptés)
OFFRANDES = {
    "Orrak": ["🍃", "🌰", "🍄", "🍂"],
    "Vaek": ["🧨", "🔨", "🔧", "🧱"],
    "Nhyara": ["💨", "🎐", "🌬️", "💫"],
    "Zeroth": ["⚰️", "🕸️", "🖤", "🗝️"],
    "Aëldis": ["☃️", "🧊", "🌙", "☁️"]
}

# Valeur fixe des Lumes par offrande
LUMES_PAR_OFFRANDE = 5

# Fichier de sauvegarde
DATA_FILE = "users_data.json"

# --- FONCTIONS SAUVEGARDE ---

def load_data():
    try:
        with open(DATA_FILE, "r", encoding="utf-8") as f:
            return json.load(f)
    except FileNotFoundError:
        return {}

def save_data(data):
    with open(DATA_FILE, "w", encoding="utf-8") as f:
        json.dump(data, f, indent=4)

user_data = load_data()

# --- EVENTS ---

@bot.event
async def on_ready():
    print(f"✨ Connecté en tant que {bot.user}")

@bot.event
async def on_raw_reaction_add(payload):
    if payload.user_id == bot.user.id:
        return

    guild = bot.get_guild(payload.guild_id)
    member = guild.get_member(payload.user_id)
    if not member:
        return

    emoji = str(payload.emoji)
    today = str(date.today())
    user_id = str(payload.user_id)

    if user_id not in user_data:
        user_data[user_id] = {"lumes": 0}

    # --- PRIÈRES ---
    if emoji in PRIERES and payload.message_id in AUTEL_MESSAGES.values():
        if user_data[user_id].get("priere_date") == today:
            await member.send("🌙 Tu as déjà reçu une bénédiction aujourd’hui.")
            return

        role_name = PRIERES[emoji]
        role = discord.utils.get(guild.roles, name=role_name)
        if role:
            await member.add_roles(role)
            user_data[user_id]["priere_date"] = today
            save_data(user_data)
            await member.send(f"✨ Tu as reçu la bénédiction **{role_name}** !")
        return

    # --- OFFRANDES ---
    for dieu, emojis in OFFRANDES.items():
        if emoji in emojis and payload.message_id == AUTEL_MESSAGES[dieu]:
            if user_data[user_id].get("offrande_date") == today:
                await member.send("🌙 Tu as déjà fait une offrande aujourd’hui.")
                return

            user_data[user_id]["lumes"] += LUMES_PAR_OFFRANDE
            user_data[user_id]["offrande_date"] = today
            save_data(user_data)

            await member.send(f"💎 Ton offrande a été acceptée par **{dieu}**. Tu reçois **+{LUMES_PAR_OFFRANDE} Lumes** !")
            return

# --- COMMANDES ---

@bot.command()
async def benediction(ctx):
    user_id = str(ctx.author.id)
    today = str(date.today())

    # Vérifie si l’utilisateur a prié aujourd’hui
    if user_data.get(user_id, {}).get("priere_date") == today:
        role_name = user_data[user_id].get("priere_role", "Inconnue")
        await ctx.send(f"✨ {ctx.author.mention}, ta bénédiction du jour est **{role_name}**.")
    else:
        await ctx.send(f"🌙 {ctx.author.mention}, tu n’as pas encore prié aujourd’hui.")

bot.run("TON_TOKEN_ICI")
