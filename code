import os
import discord
from discord.ext import commands
from discord.errors import Forbidden
from pymongo import MongoClient
from datetime import datetime

# --- CONFIG ---
TOKEN = os.getenv("DISCORD_TOKEN")
MONGO_URL = os.getenv("MONGO_URL")
GUILD_ID = int(os.getenv("GUILD_ID"))

intents = discord.Intents.default()
intents.members = True
intents.message_content = True
intents.reactions = True

bot = commands.Bot(command_prefix="!", intents=intents)

# --- DATABASE ---
mongo_client = MongoClient(MONGO_URL)
db = mongo_client["oracle"]
users_collection = db["users"]

# --- CONFIG DES PRIÈRES ET OFFRANDES ---
PRIERES = {
    "🌿": "Béni·e par la Terre",
    "🔥": "Marqué·e par la Flamme",
    "🌪️": "Guidé·e par les Vents",
    "🌑": "Voilé·e par les Ombres",
    "❄️": "Porté·e par le Silence"
}

OFFRANDES = {
    "🌿": "Orrak",
    "🔥": "Vaek",
    "🌪️": "Nhyara",
    "🌑": "Zeroth",
    "❄️": "Façonneur oublié"
}

# --- EVENTS ---
@bot.event
async def on_ready():
    print(f"✨ {bot.user} est en ligne !")

@bot.event
async def on_raw_reaction_add(payload):
    if payload.guild_id != GUILD_ID:
        return

    guild = bot.get_guild(payload.guild_id)
    member = guild.get_member(payload.user_id)
    if member is None or member.bot:
        return

    emoji = str(payload.emoji)
    today = datetime.utcnow().strftime("%Y-%m-%d")

    # --- PRIÈRES ---
    if emoji in PRIERES:
        role_name = PRIERES[emoji]
        role = discord.utils.get(guild.roles, name=role_name)
        if role:
            try:
                await member.add_roles(role, reason="Prière à un Façonneur")
                await member.send(f"✨ Ta prière a été entendue. Tu es désormais **{role_name}** pour aujourd’hui.")
            except Forbidden:
                print(f"❌ Impossible de donner le rôle {role_name} à {member.display_name}")

    # --- OFFRANDES ---
    if emoji in OFFRANDES:
        divinite = OFFRANDES[emoji]

        user_data = users_collection.find_one({"_id": member.id})
        if not user_data:
            user_data = {"_id": member.id, "lumes": 0, "last_offrandes": {}}

        last_offrande = user_data.get("last_offrandes", {})
        if last_offrande.get(divinite) == today:
            try:
                await member.send(f"⚠️ Tu as déjà fait une offrande à **{divinite}** aujourd’hui.")
            except Forbidden:
                pass
            return

        # Ajout des Lumes
        user_data["lumes"] += 5
        user_data["last_offrandes"][divinite] = today
        users_collection.update_one({"_id": member.id}, {"$set": user_data}, upsert=True)

        try:
            await member.send(f"🌟 Ton offrande a été acceptée par **{divinite}**. Tu gagnes **5 Lumes** !")
        except Forbidden:
            pass

# --- COMMANDES ---
@bot.command()
async def lumes(ctx):
    user_data = users_collection.find_one({"_id": ctx.author.id})
    lumes = user_data.get("lumes", 0) if user_data else 0
    await ctx.send(f"💰 {ctx.author.mention}, tu possèdes actuellement **{lumes} Lumes**.")

# --- START ---
bot.run(TOKEN)
